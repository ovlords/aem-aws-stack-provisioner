#!/usr/bin/env bash
set -o nounset
set -o errexit

PATH=<%= $aem_tools_env_path %>
instance_id=$(facter ec2_metadata.instance-id)
component=$(facter component)
stack_prefix=$(facter stack_prefix)
aws_region=<%= $aws_region %>

export AWS_DEFAULT_REGION="${aws_region}"
echo "AWS Region: ${AWS_DEFAULT_REGION}"

translate_exit_code() {

  exit_code="$1"
  if [ "$exit_code" -eq 0 ] ; then
    exit_code=0
  else
    echo "[${stack_prefix}-${component}/${instance_id}] An error occured."
    exit "$exit_code"
  fi

  return "$exit_code"
}

<% $aws_tags.each | Integer $index, Hash $aws_tag | { -%>
  echo "key: <%= $aws_tag['Key'] %>"
  echo "value: <%= $aws_tag['Value'] %>"
<% } -%>

# "snapshot_backup" is used for checking the processes in order to
# avoid offline_snapshot_backup and live_snapshot_backup running at the same time

if (( $(ps -ef | grep -v grep | grep python | grep snapshot_backup | wc -l) > 0 )); then

  echo “snapshot_backup is running!!! Snapshots can hang when snapshoting the volume at the same time. Exiting”
  exit 1

else

  # Take a snapshot backup of a live (up and running) AEM instance's repository.
  # The purpose of this backup is to speed up subsequent snapshots, whether
  # that's live, offline, or orchestration (e.g. Orchestrator-triggered).

  <% $aem_repo_devices.each | Integer $index, Hash $aem_repo_device | { -%>
    echo "[${stack_prefix}-${component}/${instance_id}] Start taking live snapshot ..."
    echo "[${stack_prefix}-${component}/${instance_id}] <%= $aem_repo_device['device_name'] %> Snapshot Started: $(date)"

    snap_id=$(<%= $base_dir %>/aws-tools/snapshot_backup.py \
                --snapshot-description "Live AEM snapshot of <%= $component %> instance ${instance_id}" \
                --tag "Name=AEM <%= $component %> Snapshot ${instance_id}" \
                --tag "Component=<%= $component %>" \
                --tag "StackPrefix=<%= $stack_prefix %>" \
                --tag "SnapshotType=live" \
                --tag "AemId=<%= $aem_repo_device['aem_id'] %>" \
                <%- $aws_tags.each | Integer $index, Hash $aws_tag | { -%>
                --tag "<%= $aws_tag['Key'] %>=<%= $aws_tag['Value'] %>" \
                <%- } -%>
                <%= $aem_repo_device['device_name'] %>)

    translate_exit_code "$?"

    echo "[${stack_prefix}-${component}/${instance_id}] <%= $aem_repo_device['device_name'] %> Snapshot Ended: $(date)"
    echo "[${stack_prefix}-${component}/${instance_id}] Finished taking live snapshot."

    echo "[${stack_prefix}-${component}/${instance_id}] Start testing if live snapshot exists using InSpec..."
    cd "<%= $base_dir %>/aem-tools/test/inspec/inspec-aem-aws"
    HOME=/root \
      aem_component="${component}" \
      aem_stack_prefix="${stack_prefix}" \
      snapshot_id="${snap_id}" \
      inspec exec . --controls aws-snapshot-exists

    translate_exit_code "$?"
    echo "[${stack_prefix}-${component}/${instance_id}] Finished testing if live snapshot exists using InSpec."

    <% if $revert_snapshot_type == 'live' { %>

      echo "[${stack_prefix}-${component}/${instance_id}] Start updating Launch Template: $(date)"

      <%= $base_dir %>/aws-tools/update_snapshot_id_in_launch_template.py \
              --stack-prefix ${stack_prefix} \
              --component ${component} \
              --device <%= $aem_repo_device['device_name'] %> \
              --snapshot-id ${snap_id}

      translate_exit_code "$?"

      echo "[${stack_prefix}-${component}/${instance_id}] Finished updating Launch Template: $(date)"

    <% } -%>


  <% } -%>



fi
